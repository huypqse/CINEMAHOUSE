version: "3.8"
services:
  cinemahouse_app:
    image: cinemahouse:latest
    container_name: cinemahouse_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9090:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cinemahouse
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=12345
    networks:
      - lms-network
    depends_on:
      - postgres
      - kafka
      - elasticsearch
    volumes:
      - ../src/main/resources/static/templates/material:/app/material
    restart: always

  postgres:
    image: postgres:16
    container_name: cinemahouse_postgres
    environment:
      - POSTGRES_DB=cinemahouse
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=12345
    ports:
      - "15432:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    networks:
      - lms-network
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - lms-network
    restart: always
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    # volumes:
    #   - ~/volumes/:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s" ]
      interval: 5s
      timeout: 10s
      retries: 10
  minio:
    image: bitnami/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin@2025
    volumes:
      - ./data:/bitnami/minio/data
      - ./config:/opt/bitnami/minio/config
    ports:
      - '9000:9000'
      - '9001:9001'
    command: minio server /bitnami/minio/data --console-address ":9001"

networks:
  lms-network:
    driver: bridge
volumes:
  data:
    driver: local
  config:
    driver: local


