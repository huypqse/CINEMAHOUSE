version: "3.8"
services:
  cinemahouse-app:
    image: cinemahouse:latest
    container_name: cinemahouse-app
    build: #nếu mà docker compose up -d --build là do có cái build nayf
      context: .
      dockerfile: Dockerfile
    ports:
      - "9090:9090"#9090 máy host bên ngoài, 8080 máy host bên trong
    environment:
#    hot docker internal là host bên trogn docker
     DATABASE_HOST: host.docker.internal
     DATABASE_PORT: 15432
     DATABASE_USERNAME: sa
     DATABASE_PASSWORD: 12345
     LOGSTASH_HOST: host.docker.internal:5600
    networks:
      - cinemahouse-network
    depends_on:
      - postgres
      - elasticsearch
    volumes:
      - ../src/main/resources/static/templates/material:/app/material
    restart: always

  postgres:
    image: postgres:16
    container_name: cinemahouse_postgres
    environment:
      - POSTGRES_DB=cinemahouse
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=12345
    ports:
      - "15432:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    networks:
      - cinemahouse-network
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - cinemahouse-network
    restart: always


  elasticsearch:
    image: elasticsearch:7.14.1
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    networks:
      - default

  kibana:
      image: kibana:7.14.1
      container_name: kibana
      restart: always
      ports:
        - "5601:5601"
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      networks:
        - default
  logstash:
    image: logstash:7.14.1
    container_name: logstash
    restart: always
    ports:
      - "5600:5600" # Socket port
      - "5044:5044" # Beats input
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_MONITORING_ENABLED=true
    networks:
      - default
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=:9091
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9091:9091'
    networks:
      - cinemahouse-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment: # account: grafana/password
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=password
    ports:
      - '3000:3000'
    links:
      - prometheus
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - cinemahouse-network

#  minio:
#    image: bitnami/minio:latest
#    container_name: minio
#    environment:
#      MINIO_ROOT_USER: admin
#      MINIO_ROOT_PASSWORD: admin@2025
#    volumes:
#      - ./big_data:/bitnami/minio/data
#      - ./config:/opt/bitnami/minio/config
#    ports:
#      - '9000:9000'
#      - '9001:9001'
#    command: minio server /bitnami/minio/data --console-address ":9001"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#      interval: 30s
#      retries: 3
#      start_period: 30s
#      timeout: 10s
networks:
  cinemahouse-network:
    driver: bridge
volumes:
  data:
    driver: local
  config:
    driver: local
  grafana:


